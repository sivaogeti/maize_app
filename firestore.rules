rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    function signedIn() {
      return request.auth != null;
    }

    function inOrg() {
      return signedIn() && (request.auth.uid in resource.data.orgPathUids);
    }

    function creatingInOwnOrg() {
      return signedIn()
        && request.resource.data.createdBy == request.auth.uid
        && request.auth.uid in request.resource.data.orgPathUids;
    }
    
    
    // FARMERS
    match /farmers/{doc} {
      allow read: if signedIn() && (
        ( 'orgPathUids' in resource.data && request.auth.uid in resource.data.orgPathUids ) ||
        ( 'createdBy'   in resource.data && resource.data.createdBy == request.auth.uid )
      );
      allow create: if creatingInOwnOrg();
      allow update, delete: if inOrg();
    }

    // FARMER REGISTRATIONS
    match /farmer_registrations/{doc} {
      allow read: if signedIn() && (
        ( 'orgPathUids' in resource.data && request.auth.uid in resource.data.orgPathUids ) ||
        ( 'createdBy'   in resource.data && resource.data.createdBy == request.auth.uid )
      );
      allow create: if creatingInOwnOrg();
      allow update, delete: if inOrg();
    }


    // ACTIVITY SCHEDULES
    match /activity_schedule/{doc} {
      allow read: if inOrg();
      allow create: if creatingInOwnOrg();
      allow update, delete: if inOrg();
    }

    // FIELD OBSERVATIONS
    match /field_observations/{doc} {
      allow read: if inOrg();
      allow create: if creatingInOwnOrg();
      allow update, delete: if inOrg();
    }

    // FIELD DIAGNOSTICS
    match /field_diagnostics/{doc} {
      allow read: if inOrg();
      allow create: if creatingInOwnOrg();
      allow update, delete: if inOrg();
    }
    
		match /field_incharges/{doc} {
  		allow read: if signedIn() &&
    		(request.auth.uid in resource.data.orgPathUids);
		}
    
    // USERS (used by CIC to read Field Incharges)
    match /users/{uid} {
    allow read: if signedIn() && (
        // self
        uid == request.auth.uid ||

        // shared org via orgPathUids array (preferred path)
        ('orgPathUids' in resource.data &&
         request.auth.uid in resource.data.orgPathUids) ||

        // explicit relationships — in case some user docs
        // are missing orgPathUids but do have these fields
        (resource.data.clusterInchargeUid == request.auth.uid) ||
        (resource.data.territoryInchargeUid == request.auth.uid) ||
        (resource.data.managerUid == request.auth.uid) ||

        // super users
        (resource.data.super == true)
    );

    allow create, update, delete: if false;
  }
  
  	// FARMER NETWORK (Agreements)
    match /farmers_network/{doc} {
      allow read: if signedIn() &&
        ('orgPathUids' in resource.data &&
         request.auth.uid in resource.data.orgPathUids);
      allow create: if creatingInOwnOrg();
      allow update, delete: if inOrg();
    }
    
    //Activity Schedule for Cluster Incharge 
    match /activity_schedule/{doc} {
      allow read: if inOrg();
      allow create: if creatingInOwnOrg();
      allow update, delete: if inOrg();
    }

		//Daily logs  
		match /daily_logs/{docId} {
      allow read, write: if request.auth != null
                         && resource.data.ownerUid == request.auth.uid;
    }
    
    //Daily logs - Rule 2
    match /users/{uid}/daily_logs/{docId} {
      allow read: if request.auth != null;     // <— TEMP: relax read
      allow write: if request.auth != null && request.auth.uid == uid;
    }

		
    

    
  }
}
